swagger: "2.0"
info:
  version: 1.0.0
  title: Splurge
  description: Experiment for easy client/server gen
host: localhost
basePath: /api/v1
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /signup:
    post:
      summary: Creates User
      operationId : createUser
      description: Creates User
      tags:
        - User
      parameters:
        - name: User
          in: body
          description: User payload
          required: true
          schema:
            $ref: '#/definitions/NewUser'
      responses:
        "200":
          description: response
          schema:
            $ref: '#/definitions/User'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /login:
    post:
      summary: User login
      operationId : login
      description: User login
      tags:
        - User
      parameters:
        - name: User
          in: body
          description: User payload
          required: true
          schema:
            $ref: '#/definitions/UserLogin'
      responses:
        "200":
          description: response
          schema:
            $ref: '#/definitions/User'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /splurges/{userId}:
    post:
      summary: Splurge creation
      operationId : splurgeCreation
      description: Creates splurge for user
      tags: 
        - Splurges
      parameters:
        - name: Splurge
          in: body
          description: Splurge payload
          required: true
          schema:
            $ref: '#/definitions/NewSplurge'
        - name: userId
          in: path
          type: string
          required: true
      responses:
        "200":
          description: response
          schema:
            $ref: '#/definitions/Splurge'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'  
    get:
      summary: Fetch splurges
      operationId : fetchSplurges
      description: Fetch all of user's splurges
      tags: 
        - Splurges
      parameters:
        - name: userId
          in: path
          type: string
          required: true
      responses:
        "200":
          description: response
          schema:
            type: array
            items:
              $ref: '#/definitions/Splurge'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /splurge/{splurgeId}:
    put:
      summary: Use splurges
      operationId : useSplurge
      description: Uses a splurge
      tags: 
        - Splurges
      parameters:
        - name: splurgeId
          in: path
          type: string
          required: true
      responses:
        "200":
          description: response
          schema:
            $ref: '#/definitions/Splurge'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /posts:
    post:
      summary: Create post
      operationId : createPost
      description: Creates a post
      tags: 
        - Posts
      parameters:
        - name: Post
          in: body
          description: Post Payload
          required: true
          schema:
            $ref: '#/definitions/NewPost'
      responses:
        "200":
          description: response
          schema:
            $ref: '#/definitions/Post'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'  
    get:
      summary: Fetch posts
      operationId : fetchPosts
      description: Fetch posts
      tags: 
        - Posts
      responses:
        "200":
          description: response
          schema:
            type: array
            items:
              $ref: '#/definitions/Post'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  
definitions:
  NewUser:
    required:
      - email
      - password
      - username
    properties:
      email:
        type: string
      username:
        type: string
      password:
        type: string
  User:
    required:
      - id
      - username
    properties:
      username:
        type: string
      id:
        type: string
  UserLogin:
    required:
      - password
    properties:
      email:
        type: string
      username:
        type: string
      password:
        type: string
  NewSplurge:
    required:
      - name
      - frequency
      - duration
    properties:
      name:
        type: string
      frequency:
        type: integer
      duration:
        type: string
        enum:
          - daily
          - weekly
          - monthly
          - yearly
  Splurge:
    required:
      - name
      - frequency
      - duration
      - remaining
      - resets
      - id
    properties:
      name:
        type: string
      id:
        type: string
      frequency:
        type: integer
      remaining:
        type: integer
      duration:
        type: string
        enum:
          - daily
          - weekly
          - monthly
          - yearly
      resets:
        type: string
        format: date-time
  Post:
    required:
      - userName
      - createdAt
      - id
      - likes
      - image
      - text
    properties:
      userName:
        type: string
      id:
        type: string
      likes:
        type: integer
      image:
        type: string
      text:
        type: string
      createdAt:
        type: string
        format: date-time
  NewPost:
    required:
      - text
    properties:
      image:
        type: string
      text:
        type: string
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string